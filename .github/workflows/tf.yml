# GitHub Actions workflow for Terraform
# - Runs plan on all branches
# - Apply/Destroy only on main branch after manual approval
# - Adds a pretty summary table in GitHub summary tab

name: Terraform CI/CD

on:
  workflow_dispatch:

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment:
      name: approval
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Debug AWS Identity
        run: aws sts get-caller-identity

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -recursive

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan.txt

      - name: Show Plan Changes
        run: terraform show -no-color tfplan.txt

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan.txt

      - name: Add Plan Summary Table
        run: |
          {
            echo "## 🚀 Terraform Workflow Summary"
            echo ""
            echo "| 🔑 Step     | 📋 Description |"
            echo "|-------------|----------------|"
            echo "| ⚡ Init     | Initialize backend & providers |"
            echo "| 🎨 Format   | Format Terraform code |"
            echo "| 🔍 Validate | Validate configuration files |"
            echo "| 📊 Plan     | Generate execution plan |"
            echo "| 🚀 Apply    | Apply infrastructure changes (manual approval) |"
            echo "| 💣 Destroy  | Destroy resources (manual approval) |"
            echo ""
            echo "✅ Plan generated successfully!"
          } >> $GITHUB_STEP_SUMMARY

  terraform-apply:
    name: Terraform Apply
    needs: terraform-plan
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: approval
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Debug AWS Identity
        run: aws sts get-caller-identity

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply (Manual Approval Required)
        run: terraform apply -auto-approve tfplan.txt

  terraform-destroy:
    name: Terraform Destroy
    needs: terraform-plan
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: approval
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Debug AWS Identity
        run: aws sts get-caller-identity

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy (Manual Approval Required)
        run: terraform destroy -auto-approve
